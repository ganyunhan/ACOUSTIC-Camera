`timescale 1ns / 1ps
module tb();

reg clk;
reg rst_n;
integer fid_wr;
reg xcorr_start;
reg [clogb2(N)-1:0] ad=0;

wire signed [6 - 1: 0]  lag_diff;

reg signed [16- 1: 0] memx [ 0:512- 1];
reg signed [16- 1: 0] memy [ 0:512- 1];

reg signed [16- 1: 0]  series_x;
reg signed [16- 1: 0]  series_y;
reg                    complete;
reg signed [32- 1: 0]  result;

assign series_x = U_TOP.U_MIC_SUBSYS.U_XCORR_Top.series_x;
assign series_y = U_TOP.U_MIC_SUBSYS.U_XCORR_Top.series_y;
assign complete = U_TOP.U_MIC_SUBSYS.U_XCORR_Top.complete;
assign result   = U_TOP.U_MIC_SUBSYS.U_XCORR_Top.result;

initial begin
    xcorr_start = 1'b1;
    #100 
    xcorr_start = 1'b0;
end

//Throw data into xcorr
initial begin
    $readmemb("../XCORR/data/tb_x.dat",memx);
    $readmemb("../XCORR/data/tb_y.dat",memy);
end

always @(posedge clk) begin
    if (xcorr_start) begin
        ad <= 0;
    end
    else begin
        ad <= ad + 1;
    end
end

always @(posedge clk) begin
    if(xcorr_start) begin
        series_x <= 0;
        series_y <= 0;
    end
    else begin
        series_x <= memx[ad];
        series_y <= memy[ad];
    end
end

//Read result data from xcorr
initial begin
	fid_wr = $fopen("../XCORR/data/golden_result.dat", "w");
end

always @(posedge clk) begin
	if (complete)begin
		$fdisplay(fid_wr,"%d",result);
	end
end


always #10 clk = ~clk;

function integer clogb2(input integer N);
        begin
                for(clogb2=0;N>1;clogb2=clogb2+1)
                        N = N >> 1;
        end
endfunction

top U_TOP(
     .PAD_CLK           (clk) //input              
    ,.PAD_RST_N         (rst_n) //input              
    ,.PAD_XC_EN         (xcorr_start) //input              
    ,.PAD_MIC0_DA       () //input              
    ,.PAD_MIC1_DA       () //input              
    ,.PAD_LR0           () //output             
    ,.PAD_LR1           () //output             
    ,.PAD_WS0           () //output             
    ,.PAD_WS1           () //output             
    ,.PAD_CLK_MIC0      () //output             
    ,.PAD_CLK_MIC1      () //output             
    ,.lag_diff          (lag_diff) //output [6 - 1: 0]  
);



endmodule